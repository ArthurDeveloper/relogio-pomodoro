{"version":3,"sources":["components/ClockContext.jsx","components/ClockProvider.jsx","components/ClockForm.jsx","components/Notifier.jsx","components/Clock.jsx","components/App.jsx","index.js"],"names":["Context","createContext","timer","setTimer","cycles","setCycles","restTime","setRestTime","longRestTime","setLongRestTime","inRest","setInRest","inLongRest","setInLongRest","ClockProvider","children","useState","active","setActive","Provider","value","ClockForm","useContext","ClockContext","onSubmit","event","preventDefault","for","type","id","name","onChange","target","style","flexBasis","height","Notifier","hasPermission","init","alert","Notification","requestPermission","Error","notify","title","body","icon","this","Clock","intervalID","setIntervalID","currentTime","setCurrentTime","currentRestTime","setCurrentRestTime","currentLongRestTime","setCurrentLongRestTime","split","minutes","seconds","restMinutes","restSeconds","longRestMinutes","longRestSeconds","a","useEffect","window","setInterval","parseInt","toString","length","clearInterval","App","className","Helmet","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f95c5968.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst Context = createContext({\r\n    timer: null, setTimer: null,\r\n    cycles: null, setCycles: null,\r\n    restTime: null, setRestTime: null,\r\n    longRestTime: null, setLongRestTime: null,\r\n    inRest: null, setInRest: null,\r\n    inLongRest: null, setInLongRest: null\r\n});\r\n\r\nexport default Context;","import { useState } from 'react';\r\nimport Context from './ClockContext.jsx'\r\n\r\nexport default function ClockProvider({ children }) {\r\n\r\n    const [timer, setTimer] = useState('00:00');\r\n\r\n    const [cycles, setCycles] = useState(0);\r\n\r\n    const [restTime, setRestTime] = useState('00:00');\r\n\r\n    const [longRestTime, setLongRestTime] = useState('00:00');\r\n\r\n    const [inRest, setInRest] = useState(true);\r\n\r\n    const [active, setActive] = useState(false);\r\n\r\n    const [inLongRest, setInLongRest] = useState(false);\r\n\r\n    return (\r\n        <Context.Provider value={{ \r\n                                    timer, setTimer, \r\n                                    cycles, setCycles, \r\n                                    restTime, setRestTime, \r\n                                    longRestTime, setLongRestTime,\r\n                                    inRest, setInRest,\r\n                                    active, setActive,\r\n                                    inLongRest, setInLongRest\r\n                                }}>\r\n            {children}\r\n        </Context.Provider>\r\n    );\r\n}","import { useState, useContext } from 'react';\r\nimport ClockContext from './ClockContext';\r\nimport '../styles/ClockForm.css';\r\n\r\nexport default function ClockForm() {\r\n\r\n    const { timer, setTimer, \r\n            cycles, setCycles,\r\n            restTime, setRestTime,\r\n            longRestTime, setLongRestTime,\r\n            inRest, setInRest,\r\n            active, setActive,\r\n            inLongRest, setInLongRest } = useContext(ClockContext); \r\n\r\n    const onCyclesCountChange = (event) => {\r\n        setCycles(event.target.value);\r\n    };\r\n\r\n    const onTimerChange = (event) => {\r\n        setTimer(event.target.value);\r\n    }\r\n\r\n    const onRestTimeChange = (event) => {\r\n        setRestTime(event.target.value);\r\n    }\r\n\r\n    const onLongRestTimeChange = (event) => {\r\n        setLongRestTime(event.target.value);\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        setActive(true);\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={onSubmit}>\r\n\r\n            <div>\r\n                <label for=\"cycles-count\">Ciclos: </label>\r\n                    <input type=\"number\" id=\"cycles-count\" name=\"cycles-count\" value={cycles}\r\n                        onChange={onCyclesCountChange} />\r\n            </div>\r\n            \r\n            <div>\r\n                <label for=\"cycle-time\">Tempo de ciclo: </label>\r\n                    <input type=\"time\" id=\"cycle-time\" value={timer}\r\n                        onChange={onTimerChange} />\r\n            </div>\r\n\r\n            <div>\r\n                <label for=\"pause-time\">Tempo de descanço: </label>\r\n                    <input type=\"time\" id=\"pause-time\" value={restTime}\r\n                        onChange={onRestTimeChange} />\r\n            </div>\r\n\r\n            <div>\r\n                <label for=\"last-pause-time\">Descanço final: </label>\r\n                    <input type=\"time\" id=\"last-pause-time\" value={longRestTime}\r\n                        onChange={onLongRestTimeChange} />\r\n            </div>\r\n\r\n            <div style={{flexBasis: \"100%\", height: \"30px\"}}>\r\n                <button type=\"submit\">Iniciar</button>\r\n            </div>\r\n        </form>\r\n    )\r\n} ","const Notifier = {\r\n\r\n    hasPermission: false,\r\n\r\n    async init() {\r\n        alert('Aceite o envio de notificações para o relógio notificá-lo quando você precisar descançar ou voltar ao trabalho.');\r\n        const permissionRequest = await Notification.requestPermission();\r\n        if (permissionRequest !== 'granted') {\r\n            throw new Error('ERROR! Permission to access notifier denied');\r\n        }\r\n        \r\n        this.hasPermission = true;\r\n        return true;\r\n    },\r\n\r\n    notify({ title, body, icon }) {\r\n        if (this.hasPermission) {\r\n            const options = {\r\n                body,\r\n                icon\r\n            }\r\n            new Notification(title, options);\r\n        }\r\n    }\r\n};\r\n\r\nexport default Notifier;","import { useState, useEffect, useContext } from 'react';\r\nimport ClockContext from './ClockContext';\r\nimport ClockForm from './ClockForm';\r\nimport '../styles/Clock.css';\r\nimport Notifier from './Notifier';\r\n\r\nexport default function Clock() {\r\n\r\n  const [intervalID, setIntervalID] = useState();\r\n\r\n  const { timer, setTimer,\r\n          cycles, setCycles,\r\n          restTime, setRestTime,\r\n          longRestTime, setLongRestTime,\r\n          inRest, setInRest,\r\n          active, setActive,\r\n          inLongRest, setInLongRest} = useContext(ClockContext);\r\n\r\n  const [currentTime, setCurrentTime] = useState(timer); \r\n\r\n  const [currentRestTime, setCurrentRestTime] = useState(restTime); \r\n\r\n  const [currentLongRestTime, setCurrentLongRestTime] = useState(longRestTime); \r\n\r\n  let [minutes, seconds] = currentTime.split(':');\r\n\r\n  let [restMinutes, restSeconds] = currentRestTime.split(':');\r\n\r\n  let [longRestMinutes, longRestSeconds] = currentLongRestTime.split(':');\r\n\r\n\r\n  // Inicializando notificador\r\n  (async () => {\r\n    alert('Aceite o envio de notificações para o relógio notificá-lo quando você precisar descançar ou voltar ao trabalho.');\r\n    try {\r\n      const initialized = await Notifier.init();\r\n    } catch (Error) {\r\n\r\n    }\r\n  })();\r\n\r\n\r\n  useEffect(() => {\r\n    setCurrentTime(timer);\r\n  }, [timer]);\r\n\r\n  useEffect(() => {\r\n    setCurrentRestTime(restTime);\r\n  }, [restTime]);\r\n\r\n  useEffect(() => {\r\n    setCurrentLongRestTime(longRestTime);\r\n  }, [longRestTime]);\r\n\r\n  useEffect(() => {\r\n    setInRest(false);\r\n  }, [active]);\r\n\r\n  useEffect(() => {\r\n    if (active) {\r\n      if (!inRest && !inLongRest) {\r\n        setIntervalID(window.setInterval(() => {\r\n\r\n          [minutes, seconds] = [parseInt(minutes), parseInt(seconds)];\r\n\r\n          seconds--;\r\n\r\n          if (seconds.toString() === '-1') {\r\n            minutes--;\r\n            seconds = 59;\r\n          }\r\n\r\n          if (minutes.toString().length < 2) {\r\n            minutes = '0' + minutes;\r\n          }\r\n\r\n          if (seconds.toString().length < 2) {\r\n            seconds = '0' + seconds;\r\n          }\r\n\r\n          setCurrentTime(`${minutes}:${seconds}`);\r\n        }, 1000));\r\n        \r\n      } else if (inRest) {\r\n        setIntervalID(window.setInterval(() => {\r\n\r\n          // alert(`${minutes}:${seconds}`);\r\n\r\n          [restMinutes, restSeconds] = [parseInt(restMinutes), parseInt(restSeconds)];\r\n\r\n          // alert(`${minutes}:${seconds}`);\r\n\r\n          restSeconds--;\r\n\r\n          if (restSeconds.toString() === '-1') {\r\n            restMinutes--;\r\n            restSeconds = 59;\r\n          }\r\n\r\n          if (restMinutes.toString().length < 2) {\r\n            restMinutes = '0' + restMinutes;\r\n          }\r\n\r\n          if (restSeconds.toString().length < 2) {\r\n            restSeconds = '0' + restSeconds;\r\n          }\r\n\r\n          setCurrentRestTime(`${restMinutes}:${restSeconds}`);\r\n        }, 1000));\r\n      }\r\n    }\r\n  }, [active, inRest]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (inLongRest) {\r\n      setIntervalID(window.setInterval(() => {\r\n\r\n        [longRestMinutes, longRestSeconds] = [parseInt(longRestMinutes), \r\n                                              parseInt(longRestSeconds)];\r\n\r\n        longRestSeconds--;\r\n\r\n        if (longRestSeconds.toString() === '-1') {\r\n          longRestMinutes--;\r\n          longRestSeconds = 59;\r\n        }\r\n\r\n        if (longRestMinutes.toString().length < 2) {\r\n          longRestMinutes = '0' + longRestMinutes;\r\n        }\r\n\r\n        if (longRestSeconds.toString().length < 2) {\r\n          longRestSeconds = '0' + longRestSeconds;\r\n        }\r\n\r\n        setCurrentLongRestTime(`${longRestMinutes}:${longRestSeconds}`);\r\n      }, 1000));\r\n    }\r\n  }, [inLongRest]);\r\n\r\n  useEffect(() => {\r\n    if (minutes == '-1') {\r\n      Notifier.notify({title: 'Hora do descanço!',\r\n                       body: `Você terá ${restTime} minutos de descanço antes de voltar ao trabalho.`,\r\n                       icon: null});\r\n      clearInterval(intervalID);\r\n      setInRest(!inRest);\r\n    }\r\n  }, [minutes]);\r\n\r\n  useEffect(() => {\r\n    if (restMinutes == '-1') {\r\n      clearInterval(intervalID);\r\n      setCycles(cycles-1);\r\n      if (cycles == 1) {\r\n        setInRest(false);\r\n        setInLongRest(true);\r\n        Notifier.notify({title: 'Fim dos ciclos!',\r\n                         body: `Você completou todos os ciclos e pode descançar por `+\r\n                               `${longRestTime} minutos antes de começar novamente.`,\r\n                         icon: null});\r\n        return;\r\n      }\r\n      Notifier.notify({title: 'Hora de trabalhar!',\r\n                       body: `O seu descanço terminou. Hora de voltar ao trabalho!.`,\r\n                       icon: null});\r\n      setCurrentTime(timer);\r\n      setCurrentRestTime(restTime);\r\n      setInRest(!inRest);\r\n    }\r\n  }, [restMinutes]);\r\n\r\n  useEffect(() => {\r\n    if (longRestMinutes == '-1') {\r\n      clearInterval(intervalID);\r\n      Notifier.notify({title: 'Pomodoro finalizado!',\r\n                       body: `O descanço final terminou. Você pode reiniciar o pomodoro se quiser.`,\r\n                       icon: null});\r\n      setActive(false);\r\n      setInRest(false);\r\n      setInLongRest(false);\r\n      setCycles(0);\r\n      setTimer('00:00');\r\n      setRestTime('00:00');\r\n      setLongRestTime('00:00');\r\n      setInRest(false);\r\n    }\r\n  }, [longRestMinutes]);\r\n\r\n\r\n  return (\r\n    <div id=\"clock-settings\">\r\n      <h1 id=\"clock-title\">Relógio pomodoro</h1>\r\n      <h3 id=\"clock-how-to-use-advice\">Digite um tempo em minutos para o relógio tocar um alarme.</h3>\r\n      \r\n      <ClockForm />\r\n\r\n      <div id=\"clock-container\">\r\n        <div id=\"clock\">\r\n          {inRest ? currentRestTime : (inLongRest ? currentLongRestTime : currentTime)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n}\r\n","import Helmet from 'react-helmet';\nimport '../styles/App.css';\nimport ClockProvider from './ClockProvider';\nimport Clock from './Clock';\n\nexport default function App() {\n\n  return (\n    <div className=\"App\">\n\n      <Helmet>\n        <title>Relógio pomodoro</title>\n      </Helmet>\n\n      <div className=\"centered\">\n        <ClockProvider>\n          <Clock />\n        </ClockProvider>\n      </div>\n    </div>\n  );\n}\n","import ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App.jsx';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n) "],"sourceRoot":""}